// <auto-generated />
using System;
using List.Users.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace List.Users.Migrations
{
    [DbContext(typeof(UsersDbContext))]
    [Migration("20250822231733_InactiveUsers")]
    partial class InactiveUsers
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("List.Users.Models.AssistantPermissions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("CanAddStudents")
                        .HasColumnType("boolean")
                        .HasColumnName("can_add_students");

                    b.Property<bool>("CanManageCategories")
                        .HasColumnType("boolean")
                        .HasColumnName("can_manage_categories");

                    b.Property<bool>("CanManagePeriods")
                        .HasColumnType("boolean")
                        .HasColumnName("can_manage_periods");

                    b.Property<bool>("CanManageStudents")
                        .HasColumnType("boolean")
                        .HasColumnName("can_manage_students");

                    b.Property<bool>("CanManageTaskTypes")
                        .HasColumnType("boolean")
                        .HasColumnName("can_manage_task_types");

                    b.Property<bool>("CanViewLogs")
                        .HasColumnType("boolean")
                        .HasColumnName("can_view_logs");

                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("assistant_permissions");
                });

            modelBuilder.Entity("List.Users.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("e_mail");

                    b.Property<string>("Fullname")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_name");

                    b.Property<bool>("Inactive")
                        .HasColumnType("boolean")
                        .HasColumnName("inactive ");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("PasswordToken")
                        .HasColumnType("text")
                        .HasColumnName("password_token");

                    b.Property<int>("Role")
                        .HasColumnType("integer")
                        .HasColumnName("role");

                    b.Property<DateTime>("Updated")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("List.Users.Models.AssistantPermissions", b =>
                {
                    b.HasOne("List.Users.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
